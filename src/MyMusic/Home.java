/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MyMusic;

import jaco.mp3.player.MP3Player;
import java.io.File;
import java.nio.file.Paths;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.Line;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.Mixer;
/**
 *
 * @author user
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    //menetukan class MP3 player dari jaco mp3 player
    MP3Player Player;
    //menetukan file untuk lagu
    File songFile;
    //mebebtukan directory saat ini
    String currentDirectory = "home.user";
    //disini kita menentukan jalur untuk run
    String currentPath;
    //String ini untuk jalur atau gambar
    String imagePath;
    //kita membutuhkan string untuk app title
    String appName = "My Music";
    
    //sekarang chek jika tombol repeat memungkin atau tidak
    boolean repeat = false;
    // disini kita membuat boolean untuk windowcollapsed
    boolean windowCollapsed = false;
    //disini kita membutuhkan untuk menentukan posisi xmouse dan ymouse di screen
    int xMouse,yMouse;
    
    public Home() {
        initComponents();
        //disini untuk app title
        appTitle.setText(appName);
        
        //disini kita pergi menuju file lagu
        songFile = new File ("This-PC");
        
        //sekarang buat String untuk mendapatkan nama file
        String fileName = songFile.getName();
        //disini kita mengaturlabel nama lagu dengan nama ini
        songNameDisplay.setText(fileName);
        
        //tambahkan method untuk variable player
        Player = mp3Player();
        //sekarang tamabahkan lagu ke player
        Player.addToPlayList(songFile);
        
        //disini kita dapatkan jalur dan gambar di string
        currentPath = Paths.get(".").toAbsolutePath().normalize().toString();
        imagePath = ("\\images");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        playButton = new javax.swing.JLabel();
        pauseButton = new javax.swing.JLabel();
        stopButton = new javax.swing.JLabel();
        uploadButton = new javax.swing.JLabel();
        repeatButton = new javax.swing.JLabel();
        vdownButton = new javax.swing.JLabel();
        vupButton = new javax.swing.JLabel();
        vfullButton = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        songNameMainPanel = new javax.swing.JPanel();
        songNameSubPanel = new javax.swing.JPanel();
        songNameDisplay = new javax.swing.JLabel();
        headerPanel = new javax.swing.JPanel();
        appTitle = new javax.swing.JLabel();
        exitButton = new javax.swing.JLabel();
        settingsButton = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundPanel.setBackground(new java.awt.Color(153, 204, 255));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        controlPanel.setBackground(new java.awt.Color(255, 255, 255));

        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/play1-128x128 (1).png"))); // NOI18N

        pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/pause-128x128 (1).png"))); // NOI18N

        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/stop-128x128 (1).png"))); // NOI18N

        uploadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/folder-upload-2-128x128 (1).png"))); // NOI18N

        repeatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/PngItem_2266177 (1).png"))); // NOI18N

        vdownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/volume_down.png"))); // NOI18N

        vupButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/volume_up.png"))); // NOI18N

        vfullButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/volume_full.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/volume_mute.png"))); // NOI18N

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(repeatButton)
                .addGap(35, 35, 35)
                .addComponent(pauseButton)
                .addGap(18, 18, 18)
                .addComponent(playButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stopButton)
                .addGap(41, 41, 41)
                .addComponent(uploadButton)
                .addGap(61, 61, 61)
                .addComponent(vdownButton)
                .addGap(21, 21, 21)
                .addComponent(vupButton)
                .addGap(24, 24, 24)
                .addComponent(vfullButton)
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pauseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(stopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(uploadButton))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(repeatButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(vfullButton)
                    .addComponent(vdownButton)
                    .addComponent(vupButton))
                .addGap(32, 32, 32))
        );

        songNameMainPanel.setBackground(new java.awt.Color(255, 255, 255));

        songNameSubPanel.setBackground(new java.awt.Color(255, 255, 255));
        songNameSubPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 204, 255), 5, true));

        songNameDisplay.setText("Buat Display Lagu");

        javax.swing.GroupLayout songNameSubPanelLayout = new javax.swing.GroupLayout(songNameSubPanel);
        songNameSubPanel.setLayout(songNameSubPanelLayout);
        songNameSubPanelLayout.setHorizontalGroup(
            songNameSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(songNameSubPanelLayout.createSequentialGroup()
                .addGap(389, 389, 389)
                .addComponent(songNameDisplay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        songNameSubPanelLayout.setVerticalGroup(
            songNameSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(songNameSubPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(songNameDisplay)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout songNameMainPanelLayout = new javax.swing.GroupLayout(songNameMainPanel);
        songNameMainPanel.setLayout(songNameMainPanelLayout);
        songNameMainPanelLayout.setHorizontalGroup(
            songNameMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(songNameMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(songNameSubPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        songNameMainPanelLayout.setVerticalGroup(
            songNameMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, songNameMainPanelLayout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addComponent(songNameSubPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        headerPanel.setBackground(java.awt.SystemColor.controlHighlight);
        headerPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 5, true));

        appTitle.setText("MyMusic - MP3 Player");

        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/power.png"))); // NOI18N

        settingsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyMusic/Pictures/settings.png"))); // NOI18N

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(appTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(settingsButton)
                .addGap(39, 39, 39)
                .addComponent(exitButton)
                .addGap(32, 32, 32))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settingsButton)
                    .addComponent(exitButton)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(appTitle)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(songNameMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(headerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(songNameMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel appTitle;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel exitButton;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel pauseButton;
    private javax.swing.JLabel playButton;
    private javax.swing.JLabel repeatButton;
    private javax.swing.JLabel settingsButton;
    private javax.swing.JLabel songNameDisplay;
    private javax.swing.JPanel songNameMainPanel;
    private javax.swing.JPanel songNameSubPanel;
    private javax.swing.JLabel stopButton;
    private javax.swing.JLabel uploadButton;
    private javax.swing.JLabel vdownButton;
    private javax.swing.JLabel vfullButton;
    private javax.swing.JLabel vupButton;
    // End of variables declaration//GEN-END:variables

    //kita buat custom mp3 player
    private MP3Player mp3Player() {
        MP3Player mp3Player = new MP3Player ();
        return mp3Player;
    }
    
    //kita buat method untuk volume mengecil
    private void volumeDownControl(Double valueToPlusMinus) {
        //dapatkan informasi mixer dari audio sistem
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        //sekarang hunakan loop for untuk list semua mixer
        for (Mixer.Info mixerInfo : mixers){
            //dapatkan mixer
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            //dapatkan line target
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            //disini gunakan loop lagi untuk list line
            for (Line.Info lineInfo : lineInfos){
                //buat null line
                Line line = null;
                //buat boolean terbuka
                boolean opened = true;
                // sekarang gunakan try exception untun line terbuka
                try {
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    //sekarang chek jika line tidak terbuka
                    if (!opened){
                        //buka line
                        line.open();
                    }
                    //buat control float
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    //sekarang buat jalur volume
                    float currentVolume = volControl.getValue();
                    //buat variable ganda dan value plus minus
                    Double volumeToCut = valueToPlusMinus;
                    //buat float dan hitung pejumlahan atau pengurangan volume
                    float changeCalc = (float) ((float)currentVolume-(double)volumeToCut);
                    //ubah value kedalam line volume
                    volControl.setValue(changeCalc);
                    
                } catch (LineUnavailableException lineException){                   
                } catch (IllegalArgumentException illException) {
                } finally {
                    //tutup line itu terbuka
                    if (line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }
    
    //kita buat method untuk volume membesar
    private void volumeUpControl(Double valueToPlusMinus) {
        //dapatkan informasi mixer dari audio sistem
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        //sekarang hunakan loop for untuk list semua mixer
        for (Mixer.Info mixerInfo : mixers){
            //dapatkan mixer
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            //dapatkan line target
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            //disini gunakan loop lagi untuk list line
            for (Line.Info lineInfo : lineInfos){
                //buat null line
                Line line = null;
                //buat boolean terbuka
                boolean opened = true;
                // sekarang gunakan try exception untun line terbuka
                try {
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    //sekarang chek jika line tidak terbuka
                    if (!opened){
                        //buka line
                        line.open();
                    }
                    //buat control float
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    //sekarang buat jalur volume
                    float currentVolume = volControl.getValue();
                    //buat variable ganda dan value plus minus
                    Double volumeToCut = valueToPlusMinus;
                    //buat float dan hitung pejumlahan atau pengurangan volume
                    float changeCalc = (float) ((float)currentVolume+(double)volumeToCut);
                    //ubah value kedalam line volume
                    volControl.setValue(changeCalc);
                    
                } catch (LineUnavailableException lineException){                   
                } catch (IllegalArgumentException illException) {
                } finally {
                    //tutup line itu terbuka
                    if (line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }
    
    //kita buat method untuk volume 
    private void volumeControl(Double valueToPlusMinus) {
        //dapatkan informasi mixer dari audio sistem
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        //sekarang hunakan loop for untuk list semua mixer
        for (Mixer.Info mixerInfo : mixers){
            //dapatkan mixer
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            //dapatkan line target
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            //disini gunakan loop lagi untuk list line
            for (Line.Info lineInfo : lineInfos){
                //buat null line
                Line line = null;
                //buat boolean terbuka
                boolean opened = true;
                // sekarang gunakan try exception untun line terbuka
                try {
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    //sekarang chek jika line tidak terbuka
                    if (!opened){
                        //buka line
                        line.open();
                    }
                    //buat control float
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    //sekarang buat jalur volume
                    float currentVolume = volControl.getValue();
                    //buat variable ganda dan value plus minus
                    Double volumeToCut = valueToPlusMinus;
                    //buat float dan hitung pejumlahan atau pengurangan volume
                    float changeCalc = (float) ((double)volumeToCut);
                    //ubah value kedalam line volume
                    volControl.setValue(changeCalc);
                    
                } catch (LineUnavailableException | IllegalArgumentException lineException){
                } finally {
                    //tutup line itu terbuka
                    if (line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }
}
